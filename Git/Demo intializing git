1.  What is the command to initialize a git repository?
        git init

2.  Initialize a git repository at /home/sarah/story-blog
        mkdir /home/sarah/story-blog
        git init
            Initialized empty Git repository in /home/sarah/story-blog/.git/
    
3.  Which hidden folder gets created after initializing a git repository?
        ls -a
            drwxr-sr-x    7 sarah    sarah         4096 Jun 12 22:20 .git

4.  Once a git repository has been initialized, which stage contains the active changes in your local git      repository?
        Working  Area

5.  Letâ€™s add a file to our project inside /home/sarah/story-blog
    File name: lion-and-mouse.txt
    File content: A Lion lay asleep in the forest
        touch lion-and-mouse.txt; echo "A Lion lay asleep in the forest" >> lion-and-mouse.txt

6.  Which stage contains new changes that will soon be committed to local git repo ?
        Staging Area

7.  You can see the status of git by executing the git status command.
        git status
            On branch master

            No commits yet

            Untracked files:
                (use "git add <file>..." to include in what will be committed)
                        lion-and-mouse.txt
                        lion-mouse.txt

            nothing added to commit but untracked files present (use "git add" to track)

8.  What commits are listed in the git repository?
        No commits

9.  What's the status of the lion-and-mouse.txt file in the repository?
        Untracked files

10. Which area of the local git repository is the lion-and-mouse.txt file in ?
        Working Area

11. Stage the file lion-and-mouse.txt to make it available for commit.
        git add lion-and-mouse.txt

12. Now, it's time to commit our change! A commit records the change in the repository compared to its previous state. But before that we must configure the git user who will be the owner of the commit.
Set git username as sarah and user email as sarah@example.com using the below commands.
        git config user.email sarah@example.com
        git config user.name sarah

13. Let's commit our change! In this case, we didn't have any previous commits,
so the addition of the file lion-and-mouse.txt is a change compared to its previous state.
Commit the files that are currently in the staging area.
First check the status of the file using the command git status. Then commit using the commit message as Added the lion and mouse story
        $ git status
        On branch master

        No commits yet

        Changes to be committed:
        (use "git rm --cached <file>..." to unstage)
                new file:   lion-and-mouse.txt

        $ git commit -m "Added the lion and mouse story" lion-and-mouse.txt 
        [master (root-commit) 4d8e0e0] Added the lion and mouse story
        1 file changed, 1 insertion(+)
        create mode 100644 lion-and-mouse.txt

14. Sarah created a new file named notes.txt where she plans to write down ideas about the story for personal purposes. She does not want git to track this file or share it with her team mates.
What is the current status of the notes.txt file?
        $ git  status
        On branch master
        Untracked files:
        (use "git add <file>..." to include in what will be committed)
                notes.txt

        nothing added to commit but untracked files present (use "git add" to track)    

15. It is good that the file is untracked. But it is still under GIT's radar. If you run the "git add ." command accidentally git will start to track this file.
Let's configure git to ignore this file permanently.
        $ echo notes.txt >> .gitignore